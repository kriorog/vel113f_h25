---
title: Homework 3 - Suggested Solution
subtitle: Design Optimization VÉL113F, fall 2025
author: Kristján Rögnvaldsson (kristjanor@hi.is)
format: pdf
number-sections: true
---

# Optimization model
## Definitions - sets, parameters, variables
Let $\mathcal{U}$ be the set of power units, indexed with $k$. Total number of units, i.e. the set cardinality, is $N_U$.

Let $\mathcal{T}$ be the set of time periods in the schedule, indexed with $j$. Total number of time periods is $N_T$.

Our parameters are as follows:

* $\tau_j$ is the length of time period $j$
* $s_k$ is the start cost of unit $k$
* $r_k$ is the running cost of unit $k$
* $d_j$ is the power demand during time period $j$
* $\overbar{p}_k$ is the upper power limit of unit $k$, if it is turned on
* $\underbar{p}_k$ is the lower power limit of unit $k$, if it is turned on

$x_{k,j}$ is a binary variable describing if machine $k$ is turned on during time period $j$, 1 if on, 0 if off. 

$p_{k,j}$ is a real variable describing the power output of unit $k$ during time period $j$.

$y_{k, j}$ is a binary variable describing if unit $k$ is turned on at the start of time period $j$.

$z_{k, j}$ is a binary variable describing if unit $k$ is turned off at the start of time period $j$.

$w_{k,j}$ is a binary variable describing if unit $k$ is started warm a the start of time period $j$.

## Constraints


### Power output of each unit
A power unit $k$ producing power during time period $j$ is constrained to produce power $p_{k,j}$ between the lower and upper power limits of that unit depending on the value of $\gamma_{k, j}$, i.e. $\underbar{p}_k$ and $\overbar{p}_k$ respectively. We multiply each side of the constraint with $x_{k,j}$ to constrain a turned off unit to produce zero power.

$$ 
x_{k, j} \, \underbar{p}_k 
\leq 
p_{k, j}  
\leq x_{k, j} \, \overbar{p}_k
$$

### Power demand for each time period
For each time period $j$, the total power produced $p_{k,j}$ by all power units must be at least as great as the power demand.

$$
\sum_{\text{all } k} p_{k, j} \geq d_j \hspace{0.5 cm} \forall j \in \mathcal{T}
$$


### Cyclic schedule
One way to constrain our schedule to by cyclical is to optimize over two consequtive schedules. 

Let our set $\mathcal{T}$ contain time periods of two consequtive schedules, with total $N_T = 10$ time periods. Each schedule then has $N_T/2 = 5$ time periods, as we have from the problem definition.

This will allow us to apply constraints across two consequtive schedules, with the second schedule then being repeated onwards.

To ensure cyclicity - we apply equality constraints to our variables $x_{k,j}$ for each pair of identical time periods in the consequtive schedule, i.e.

$$
x_{k, j} = x_{k, N_T/2+j} \hspace{0.5 cm} \forall (k,j) \in \mathcal{U} \times \mathcal{T},
\hspace{.25 cm}
j \leq N_T/2
$$

For example, the state of machine $k$ in time period $j=1$ is constrained to be equal to the state in time period $j=N_T/2+1 = 5+1=6$, i.e. the matching time period in the second schedule, and so on.

## Max 3 consecutive running periods for each unit
Due to cyclicity, we are now optimizing over two consequtive schedules of 5 time periods each, i.e. $N_T = 10$. Constraining each machine to be turned on for a maximum of 3 consequtive time periods is achieved by constraining the state of each machine for every 4 consequtive time periods to have only 3 time periods where it is turned on.

$$
\sum_{j}^{j+4} x_{k,j} \leq 3 
\hspace{0.5 cm} \forall j \in \mathcal{T}, 
\hspace{0.25 cm} j \leq N_T-4
$$

We do not need any constraints for indices $j$ where $N_T-4 < j \leq N_T$ since the state variables $x_{k,j}$ are appropriately constrained through the cyclical constraint.

### Start/stop condition of each power unit
This constraint is defined to force the required behaviour of the state variables $x_{k,j}$ based on the values of both start/stop variables $y_{k,j}$ and $z_{k,j}$ respectively.

The basic principle here is for a machine $k$ to be started during time period $j$, it must have been turned off in the previous time period $j-1$. The difference in the state variables $x$ for these two states, i.e. $x_{k,j}-x_{k,j-1}$, thus must be 1 for a start, and any other value for for any other condition (i.e. 0 or -1). A value of -1 means a unit was stopped, and 0 means no change in state.

The constraint is constructed by using the binary control variables $y$ and $z$ to force the state difference $x_{k,j}-x_{k,j-1}$ to take the required values.

$$
y_{k,j} - z_{k,j} \leq x_{k,j} - x_{k,j-1} \leq (1-z_{k,j}) - (1-y_{k,j})
\hspace{0.5 cm}
\forall (k,j) \in \mathcal{U} \times \mathcal{T},
\hspace{0.25 cm}
j \geq 2
$$

For the first time period $j=1$, our start variable $y_{k,j}$ directly controls the first state variable, since all units are turned off before the first time period.

$$
y_{k,1} \leq x_{k,j} \leq y_{k,1}
$$

which we can also write as a simple equality constraint
$$
x_{k,1} = y_{k,1}
$$

Based on this definition, we need an additional constraint on the control variables $y$ and $z$ which cannot both be 1 at the same time, and must take different values for each $(k,j)$ if there is a state change, or to both be zero if there is no state change (neither start nor stop).

$$
y_{k,j} + z_{k,j} \leq 1
\hspace{0.5 cm}
\forall (k,j) \in \mathcal{U} \times \mathcal{T}
$$

For completeness, we'll require $z_{k, 1} = 0$ for each $k \in \mathcal{U}$.

With these constraints, we obtain the desired behaviour. 

* If a machine is started, i.e. $y=1$ and $z=0$, then the constraint becomes $1 \leq x_{k,j} - x_{k,j-1} \leq 1$, which is an equality constraint forcing the state difference to be 1.

* If a machine is stopped, then $y=0$ and $z=1$, and the constraint becomes $-1 \leq x_{k,j} - x_{k,j-1} \leq -1$, forcing the state variables to describe a stop condition.

* If there is no state change, then $y=0$ and $z=0$, and the constraint is $0 \leq x_{k,j} - x_{k,j-1} \leq 0$, forcing the states to reflect a no change in state.


### Warm start
A warm start is a special type of start, which we can control with our start/stop constraint. A warm start occurs for machine $k$ in time period $j$ if $y_{k_j}=1$ and $z_{k,j-1}=1$, i.e. the machine was stopped in the previous time periods and then started in the current time period. This means it was turned off for just one time period in between, which is a warm start by definition.

To describe and to control a warm start to occur, we use the binary variable $w_{j,k}$ which takes the value 1 for a warm start, 0 otherwise.

$$
2w_{k,j} \leq y_{k,j} + z_{k, j-1} \leq 2w_{k,j} + (1-w_{k,j})
\hspace{0.5 cm}
\forall (k,j) \in \mathcal{U} \times \mathcal{T},
\hspace{0.25 cm}
j \geq 2
$$

In the first time period $j=1$, a start cannot be warm so $w_{k, 1} = 0$ for each $k \in \mathcal{U}$.

This definition provides the desired behaviour, since the sum of two binary variables can only take the values 0, 1, or 2.

* If we want a warm start, then $w_{k,j}=1$ and the constraint is $2 \leq y_{k,j}+z_{k,j-1} \leq 2$.

* If there is no warm start, then $w_{k,j}=0$ and the constraint is $0 \leq y_{k,j}+z_{k,j-1} \leq 1$.

Note that $w_{k,j} = 0$ does not force a cold start. However, we can observe that if a start occurs and it is not warm, then it must be cold.

## Objective
Our objective is the total repeating production cost for our schedule. The repeating production cost can be obtained from our second schedule, which is repeated onwards. The first schedule is not a fully repeating schedule, since the first start of each unit in the first schedule must be cold, but that may not be case for the same time period in each subsequent schedule. For example, if unit $k$ is started in time period $j=1$ (i.e. in the first schedule) it is a cold start, but if it is started in the same time period $j=6$ in the next schedule the start does not have to be cold, but it could be.

Therefore, there can be additional startup cost incurred in the first schedule which is not repeated.

Let's first consider the repeating production cost. The total cost comprises the total running cost $R$ and the total startup costs $S$, for which cold starts are 50% more costly than warm starts.

The total repeating running cost of the cyclical schedule is dependent on the power output of each unit $k$ in each time period $j$.

$$
R = \sum_{k=1}^{N_U} \sum_{j=N_T/2+1}^{N_T} p_{k,j}r_k \tau_j
$$

The startup cost $S$ is dependent on the total number of warm and cold starts in the repeating schedule. We can count the total number of starts through the variables $y_{k,j}$ and the number of warm starts can be found through the variables $w_{k,j}$. Since a start is either warm or cold, the number of cold starts is the difference between the total starts and total warm starts.

Let $S = W + C$, where $W$ is the warm start cost and $C$ is the cold start cost.

$$
W = \sum_{k=1}^{N_U} \sum_{j=N_T/2+1}^{N_T} w_{k,j}s_k
$$

$$
C = 
    1.5\,s_k
    \left(
        \sum_{k=1}^{N_U} \sum_{j=N_T/2+1}^{N_T} y_{k,j} - w_{k,j}
    \right)
$$

where the 50% cost increase on cold starts is included through $1.5s_k$.

Let's now consider the possible additional startup cost in the first schedule. Our warm start constraint requires two consequtive time periods to determine if a start is warm or cold. This means that a started unit $k$ in the first time period in the first schedule ($x_{k,1}=1$ and $y_{k,1}=1$) does not imply that $x_{k,6}=1$ and $y_{k,6}=1$, since the unit may be left running from time period $j=5$ in the first schedule before beginning a new schedule.

If this is the case, then the first schedule will have one more start than the second schedule, which will be a cold start. If this does not apply, both schedules will have the same number of starts. The difference in total starts between schedules will either be 1 or 0, a binary result.

We can then account for this possiblity with the initial start cost function $I$

$$
I = 
    \sum_{k=1}^{N_U} 
    1.5\,s_k
    \underbrace{
        \left(
            \sum_{j=1}^{N_T/2} y_{k,j} 
            - 
            \sum_{j=N_T/2+1}^{N_T} y_{k,j} 
        \right)
    }_{
        \text{takes value } 0 \text{ or } 1 \text{ for each } k
    }
$$

The objective is then to minimize $R+S+I$ or equivalently $R+W+C+I$.

After $n$ schedules, the total cost is $n(R+S)+I$

# Implementing and solving
The optimization model is implemented in python using Pyomo. See separate "varme.py" file for the implemented model. GLPK is used as a solver, either using a locallu installed \texttt{.exe} or through NEOS.

To interrogate the solution, two models are run. The first model is as defined, the second one fixes all integar variables and solves the relaxed problem to obtain the dual variables. The duals are inspected to, hopefully, extract some interesting information on the problem constraints and their effect on the optimal solution.

One thing to note - if using NEOS - the dual variables may not be returned although included in the model. Using a locally installed version of GLPK does return the duals. Note also that duals can only be returned for a linear problem, not for a problem with integer variables.

# Solution
The minimum cost from the optimization is 7913.5 kkr. There is no additional startup cost $I$ included in this solution, so this cost is the repeating production schedule cost. All starts are cold, i.e. $w_{k, j}=0$ for all $(k,j)$.

Refer to the associated text file \texttt{varme\_output.txt} for the python printout of the solution.

# Inspection
After running the defined MILP (Mixed-Integer Linear Program), we fix all of the integer variables to the values obtained in the MILP solution. This gives us a relaxed LP. We now solve this LP again using GLPK and extract the dual variables. 

Keep in mind that these dual variables apply to the relaxed LP and not directly to our original MILP - however their interpretation can give us insight into possible changes to the MILP constraint that would yield a lower optimal cost value. In general, duality theory is only valid for continuous problems (all functions continuous).

The dual variables are shown in the associated file \texttt{varme\_ouput.txt} solution printout.

The dual variables we are mainly interested in are those that contain real valued variables, and possibly integer variables as well. Since we have fixed the values of all integer variables, they are just scalars in each constraint.

* Dual variables assocated with the total power demand constraint (\texttt{con\_demand} in the pyomo model) in each constraint are positive or zero. This makes sense since increasing the required power production, increasing at least running costs, and starting costs if additional production capacity is needed to meet the added demand. The opposite case will reduce costs, i.e. reducing the power demand in each period. 

    However, we can't really control the power demand as a model design element. It is an external factor that we have to meet.

* The constraint on $\gamma$ based on the value of $x$ (constraint \texttt{con\_gamma} in the pyomo model) provides some intereseting insight. For example, the dual variables associated unit 1 in time period 8 and 9 in our two schedule model (time periods 3 and 4 in the repeating schedule) are negative (-500 kkr). We see from the solution values of $x$ that unit 1 is turned off during these periods. These duals indicate that turning unit 1 on (i.e. increasing $x$ from 0 to 1) during these time periods would reduce the total production cost. From our solution, we see that units 2 and 3 are turned on in these time periods to supply the required power. Considering that unit 3 has the highest start cost, but slightly lower running cost than the other units, turning on unit 1 would mean not starting unit in time period 3 and run only unit 1 and 2 in time periods 3 and 4. This is reinforced by the dual variables for unit 2 in the same periods being zero - i.e. indicating that changing the state of unit 2 would have no effect on the output.

    Although this would reduce the cost - we can't implement this because it requires a unit to be running for more than 3 consequtive time periods, which is not permitted.

    The lowest dual variable related to $\gamma$, i.e. indicating greatest reduction in objective value, is for unit 3 in time period 7 (time period 2 in the repeating schedule). Noting that unit 3 is turned off in this time period, this dual means that turning it on would allow the model to produce a lower total cost value. Yet again, we can't do this because it would mean running unit 3 in more than 3 consequtive time periods.

    Doing any changes to the model related to the above, i.e. fixing certain units to run at a given time period will not provdie a real reduction in optimal cost that satisfies all constraints, because if that were the case, then it would have been the solution to the problem.

* The next dual variables that are negative are related to the power output $p$ and the associated upper and lower bounds on the output power (\texttt{con\_unit\_load} in the pyomo model). Similar to \texttt{con\_gamma}, most of the negative dual variables describe a change to the model which we can't do unless violating the max 3 consequtive running period constraint for each unit. 

    The only constraint for which this does not apply is for unit 3 in time periods 3 and 4, where these units are already running at 100% power output, i.e. 55 MW in each period. Since unit 3 cannot supply the power demand alone in these time periods, we see that unit 2 is also running to supply the remaining power. Since the running cost of unit 3 is lower than for unit 2, this dual is telling us that increasing the max power output of unit 3 will reduce the total cost.

    The power output of unit 2 is 25 MW and 15 MW in time periods 3 and 4 respectively. We would like to transfer the power generation of unit 2 to unit 3 in each period, so we need to increase the production capacity of unit 3 by min 25 MW for this to be possible. The dual variables associated with each time period is $-1 \text{ kkr/MW}$, so total of $-2 \text{ kkr/MW}$ for both periods. The objective has units kkr and the constraint has units MW, so the dual will have units kkr/MW. The expected break even cost for this additional power generation of unit 3 is $-2 \cdot 25 = -50 \text{ kkr}$.

    Running the model (see model \texttt{varme\_modified.py}) again with unit 3 power capability upper bound increased by 25 MW yields an new optimal cost of 7863.5 kkr, a reduction of 50 kkr from the previous solution with all constraints satisfied. This matches our expected cost reduction from inspecting the duals. A printout of the modified solution is provided in the file \texttt{varme\_modified\_output.txt}. We can that we added the minimum amount of capabilty since unit 3 is still run at 100\% capacity in time period 3 and unit 2 is off.

    An interesting result in the model with this change is that unit 2 is never turned on. We can now satisfy the demand with units 1 and 3. This makes sense since units 1 and 2 have the same running cost, but unit 2 has lower start cost. Ther are no occasions where two units run at the same time, so there is no further change to production capability that can be done to further reduce production cost without having to violate the cyclicity and max 3 consequitive time period constraints. Other changes that may reduce cost are obvious ones, such as reducing the start and running costs of each unit.